version: '3'

dotenv: ['{{.HOME}}/.device-management-env', '.env']

includes:
  dev: "./taskfiles/k8s-dev.yml"

tasks:
  precommit:
    cmds:
      - task: gofmt
      - task: goimports
      - task: lint
      - task: test
      - task: test-race
      - task: generate-docs
  build:
    desc: Build the binaries
    vars:
      GIT_SUMMARY:
        sh: git describe --tags --dirty --always
    cmds:
      - CGO_ENABLED=1 GOOS=linux go build -a -o management -ldflags='-extldflags "-static" -X github.com/everactive/dmscore/iot-management/versions.Version={{.GIT_SUMMARY}}' ./bin/management/management.go
      - CGO_ENABLED=1 GOOS=linux go build -a -o createsuperuser -ldflags='-extldflags "-static" -X github.com/everactive/dmscore/iot-management/versions.Version={{.GIT_SUMMARY}}' cmd/createsuperuser/main.go
  gofmt:
    desc: Runs gofmt on every file in the project directory
    cmds:
      - find . -name \*.go -exec gofmt -w {} \;
  goimports:
    desc: Runs goimports on every file in the project directory
    cmds:
      - find . -name \*.go -exec goimports -w {} \;
  lint:
    desc: Run the golangci-lint on the repo
    cmds:
      - golangci-lint run
  test:
    desc: Run tests for the gateway controller
    cmds:
      - go test ./...
  test-race:
    desc: Run race detection tests
    cmds:
      - go test ./... -race
  generate-docs:
    desc: Generate the docs using terraform-docs
    cmds:
      - terraform-docs markdown table --output-file ./README.md ./deploy/
      - cd deploy && terraform fmt
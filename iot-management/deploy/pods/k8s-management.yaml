apiVersion: apps/v1
kind: Deployment
metadata:
  name: management
spec:
  selector:
    matchLabels:
      app: management
      tier: frontend
      track: stable
  replicas: 1
  template:
    metadata:
      labels:
        app: management
        tier: frontend
        track: stable
    spec:
      volumes:
        %{ for volume_name, config_map_name in VOLUMES }
        - name: ${volume_name}
          configMap:
            name: ${config_map_name}
            optional: true
        %{ endfor ~}

        - name: sql
          configMap:
            name: ${COMPONENT_POSTGRES_CONFIGMAP_NAME}
            items:
            - key: DB_CREATE_SQL
              path: create-db.sql
      initContainers:
        - name: create-db
          image: jbergknoff/postgresql-client
          command: ["psql", "-d", "$(DATASOURCE)", "-f", "/sql/create-db.sql"]
          env:
            - name: DATASOURCE
              valueFrom:
                  configMapKeyRef:
                    name: ${POSTGRES_ADMIN_CONFIGMAP}
                    key: DATASOURCE
          volumeMounts:
          - name: sql
            mountPath: /sql
      containers:
        - name: management
          imagePullPolicy: Always
          image: ${IMAGE}
          env:
            - name: LOG_LEVEL
              value: '${LOG_LEVEL}'
            - name: IOTMGMT_DATABASE_DRIVER
              value: "postgres"
            - name: IOTMGMT_DATABASE_CONNECTION_STRING
              valueFrom:
                configMapKeyRef:
                  name: ${COMPONENT_POSTGRES_CONFIGMAP_NAME}
                  key: DATASOURCE
            - name: IOTMGMT_SERVICE_HOST
              valueFrom:
                configMapKeyRef:
                  name: management-config
                  key: HOST
            - name: IOTMGMT_SERVICE_SCHEME
              valueFrom:
                configMapKeyRef:
                  name: management-config
                  key: SCHEME
            - name: IOTMGMT_IDENTITY_API_URL
              value: "http://identity:8030/v1/"
            - name: IOTMGMT_DEVICETWIN_API_URL
              value: "http://devicetwin:8040/v1/"
            - name: IOTMGMT_STORE_URL
              value: "https://api.snapcraft.io/api/v1/"
            - name: LOG_FORMAT
              value: "json"
            - name: IOTMGMT_STORE_IDS
              value: '${STOREIDS}'
            - name: IOTMGMT_SERVICE_CLIENT_TOKEN_PROVIDER
              value: "disabled"
            - name: IOTMGMT_SERVICE_AUTH_PROVIDER
              value: "static-client"
            - name: IOTMGMT_STATIC_CLIENT_TOKEN
              valueFrom:
                  secretKeyRef:
                    name: management-secrets
                    key: static-token
          ports:
            - containerPort: 8010
          volumeMounts:
          %{ for name, path in VOLUME_MOUNTS }
          - name: ${name}
            mountPath: ${path}
          %{ endfor ~}

---
apiVersion: v1
kind: Service
metadata:
  name: management-internal
spec:
  selector:
    app: management
    tier: frontend
  ports:
    - port: 8010
      protocol: TCP
---


